import os
import json
import random
from aiogram import Bot, Dispatcher, types, executor
from aiogram.types import InputFile
from aiogram.dispatcher.filters import Command
from aiogram.contrib.middlewares.logging import LoggingMiddleware

API_TOKEN = os.getenv("BOT_TOKEN")

bot = Bot(token=API_TOKEN)
dp = Dispatcher(bot)
dp.middleware.setup(LoggingMiddleware())

# –ó–∞–≥—Ä—É–∑–∫–∞ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö
try:
    with open('data.json', 'r') as f:
        db = json.load(f)
except:
    db = {"users": {}, "tasks": {}, "task_id": 0}

def save_db():
    with open('data.json', 'w') as f:
        json.dump(db, f, indent=2)

@dp.message_handler(commands=["start"])
async def start(msg: types.Message):
    uid = str(msg.from_user.id)
    ref = msg.get_args()
    if uid not in db["users"]:
        db["users"][uid] = {"points": 3, "tasks": [], "refs": [], "done": []}
        if random.random() < 0.5:
            db["users"][uid]["points"] += 5
            await msg.reply("–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å! –í–∞–º –Ω–∞—á–∏—Å–ª–µ–Ω–æ 3 –ø–æ–∏–Ω—Ç–∞ –∏ –±–æ–Ω—É—Å 5 –ø–æ–∏–Ω—Ç–æ–≤ üéÅ")
        else:
            await msg.reply("–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å! –í–∞–º –Ω–∞—á–∏—Å–ª–µ–Ω–æ 3 –ø–æ–∏–Ω—Ç–∞ üéâ")
        if ref and ref in db["users"] and uid not in db["users"][ref]["refs"]:
            db["users"][ref]["points"] += 5
            db["users"][ref]["refs"].append(uid)
            await bot.send_message(ref, f"üéâ –ù–æ–≤—ã–π —Ä–µ—Ñ–µ—Ä–∞–ª! +5 –ø–æ–∏–Ω—Ç–æ–≤.")
    else:
        await msg.reply("–í—ã —É–∂–µ –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–Ω—ã!")
    save_db()
